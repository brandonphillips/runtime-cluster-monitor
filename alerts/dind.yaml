- alert: DindMonitorDown
  expr: absent(count(container_start_time_seconds{container_name="dind-monitor",job="kubelet"}) == 1)
  for: 2m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: dind-monitor containers count != 1
    summary: dind-monitor is down

- alert: PodWarningEvent
  expr: kubernetes_events{event_type!="Normal", event_reason!="FailedScheduling", event_reason!="FailedCreatePodSandBox", event_kind="Pod", event_name !~ "filebeat.*" } offset 4m  unless on (event_name) kubernetes_events{event_type="Normal", event_reason="Started"}
  for: 2m
  labels:
    alertgroup: kube_event
    severity: warning
  annotations:
    message: |
      {{ $labels.event_type }} event - reason={{ $labels.event_reason }} for pod {{ $labels.event_name }} in namespace={{ $labels.event_namespace }}
      event_source = {{ $labels.event_source }} event_subobject={{ $labels.event_subobject }}
    summary: Pod warning event

- alert: PodFailedMount
  expr: kubernetes_events{event_type!="Normal", event_reason=~"FailedMount|FailedAttachVolume", event_kind="Pod", event_name !~ "filebeat.*" } offset 4m  unless on (event_name) kubernetes_events{event_type="Normal", event_reason="Started"}
  for: 2m
  labels:
    alertgroup: kube_event
    severity: warning
  annotations:
    message: |
      {{ $labels.event_type }} event - reason={{ $labels.event_reason }} for pod {{ $labels.event_name }} in namespace={{ $labels.event_namespace }}
      event_source = {{ $labels.event_source }} event_subobject={{ $labels.event_subobject }}
    summary: Pod Failed Mount

- alert: TooManyPodFailedMounts
  expr: count(ALERTS{alertstate="firing", alertname=~"PodFailedMount"}) > 10
  for: 5m
  labels:
    alertgroup: dind_storage
    severity: warning
  annotations:
    message: |
      Too many volume mount failures
    summary: Too Many Pod Failed Mount

- alert: PvcProvisionFailure
  expr: kubernetes_events{event_kind="PersistentVolumeClaim", event_reason="ProvisioningFailed"}
  for: 2m
  labels:
    alertgroup: dind_storage
    severity: warning
  annotations:
    message: |
      Failed to provision pvc {{ $labels.event_name }} in namespace={{ $labels.event_namespace }} pvc_name = {{ $labels.event_source }}
      event_source = {{ $labels.event_source }}
    summary: Failed to provision pvc

- alert: PvcProvisionFailureAccInfo
  expr: |
    label_replace(kubernetes_events{event_kind="PersistentVolumeClaim", event_reason="ProvisioningFailed"}, "pvc_name", "$1", "event_name", "(.*)") 
      + on (pvc_name) group_left(runtime_env,storage_class,workflow_url,io_codefresh_accountName) (dind_pvc_status == 0)
  for: 2m
  labels:
    alertgroup: dind_storage
    severity: warning
  annotations:
    message: |
      PVC Provision failure for pvc {{ $labels.pvc_name }} namespace = {{ $labels.event_namespace }}
      StorageClass = {{ $labels.storage_class }} Runtime_env = {{ $labels.runtime_env }}
      Workflow URL = {{ $labels.workflow_url }}?noAccount=true
      Account = {{ $labels.io_codefresh_accountName }}
      event_source = {{ $labels.event_source }}
    summary: Failed to provision pvc with acc info

- alert: TooManyPvcProvisionFailure
  expr: count by (event_source) (kubernetes_events{event_kind="PersistentVolumeClaim", event_reason="ProvisioningFailed"}) > 10
  for: 5m
  labels:
    alertgroup: dind_storage
    severity: critical
  annotations:
    message: |
      Too Many PVC Provisioning failures. event_source = {{ $labels.event_source }}
    summary: Too Many PVC Provisioner failures

# event_reason!="FailedScheduling", event_reason!="FailedCreatePodSandBox"

# - alert: DindLocalVolumeCleanerDownOnNode
#   expr: up{job="kubelet",node_label_codefresh_node_type="dind"} + ON(node) up{app="dind-lv-cleaner",job="k8s-pods"} != 2
#   for: 2m
#   labels:
#     alertgroup: downtime
#     severity: critical
#   annotations:
#     message: Dind local volume cleaner is down on node {{ $labels.node }}
#     summary: Dind local volume cleaner is down on node

# - alert: dindPvcStorageUsageExceeded
#   expr: (docker_volume_kb_usage > 0.85 ) + on (dind_pod_name) group_left(io_codefresh_accountName, runtime_env, backend_volume_id, volume_name) dind_pvc_volume_mount_count{dind_pod_name != "<no value>"} * 0 
#   for: 20s
#   labels:
#     alertgroup: dind_storage
#     severity: warning
#   annotations:
#     message: 'dind {{ $labels.pod_name }} storage usage > 85% on {{ $labels.volume_path }} in namespace={{ $labels.namespace }} runtime_env={{ $labels.runtime_env }}  io_codefresh_accountName={{ $labels.io_codefresh_accountName }} backend_volume_id={{ $labels.backend_volume_id }} volume_name={{ $labels.volume_name }}'
#     summary: dindPvc Storage Usage Exceeded
  
- alert: dindPvcInodeUsageExceeded
  expr: (docker_volume_inodes_usage > 0.9 ) + on (dind_pod_name) group_left(io_codefresh_accountName, runtime_env, backend_volume_id, volume_name) dind_pvc_volume_mount_count{dind_pod_name != "<no value>"} * 0
  for: 20s
  labels:
    alertgroup: dind_storage
    severity: info
  annotations:
    message: "dind {{ $labels.pod_name }} inode usage > 90% on {{ $labels.volume_path }} in namespace={{ $labels.namespace }} runtime_env={{ $labels.runtime_env }}  io_codefresh_accountName={{ $labels.io_codefresh_accountName }} backend_volume_id={{ $labels.backend_volume_id }} volume_name={{ $labels.volume_name }}\nWorkflow URL: {{ $labels.workflow_url }}?noAccount=true\nAccount: {{ $labels.io_codefresh_accountName }}"
    summary: dindPvc Inode Usage Exceeded

- alert: dindPvcNoStorageAvailable
  expr: (docker_volume_kb_available < 5e+05) + on (dind_pod_name) group_left(io_codefresh_accountName, runtime_env, backend_volume_id, volume_name) dind_pvc_volume_mount_count{dind_pod_name != "<no value>"} * 0
  for: 20s
  labels:
    alertgroup: dind_storage
    severity: info
  annotations:
    message: "dind {{ $labels.pod_name }} available storage less then 500M on {{ $labels.volume_path }} in namespace={{ $labels.namespace }} runtime_env={{ $labels.runtime_env }}  io_codefresh_accountName={{ $labels.io_codefresh_accountName }} backend_volume_id={{ $labels.backend_volume_id }} volume_name={{ $labels.volume_name }}\nWorkflow URL: {{ $labels.workflow_url }}?noAccount=true\nAccount: {{ $labels.io_codefresh_accountName }}"
    summary: dindPvc no storage available 

- alert: dockerOnDindIsDown
  expr: docker_up == 0
  for: 1m
  labels:
    alertgroup: dind_docker
    severity: warning
  annotations:
    message: "dockerd failed on dind {{ $labels.pod_name }} in namespace={{ $labels.namespace }}\nWorkflow URL: {{ $labels.workflow_url }}?noAccount=true\nAccount: {{ $labels.io_codefresh_accountName }}"
    summary: dockerd failed on dind pod
- alert: dindRunTooLong
  expr: dind_pod_status{dind_pod_name=~"dind.*"} == 1
  for: 180m
  labels:
    alertgroup: dind_problem
    severity: info
    handler: "true"
  annotations:
    message: "{{ $labels.dind_pod_name }} has run more than 180 min on runtimeEnvironment {{ $labels.codefresh_runtime_environment}} in namespace {{ $labels.dind_pod_namespace }} on instance {{ $labels.instance }}\nWorkflow URL: {{ $labels.workflow_url }}?noAccount=true\nAccount: {{ $labels.io_codefresh_accountName }}"
    summary: dind run more than 3h
    handler: delete-kubeobj {{ $labels.dind_pod_namespace }} pod/{{ $labels.dind_pod_name }}

- alert: dindRunsWithoutEngine
  expr: up{app="dind"} unless on(workflow_url) up{app="runtime"} == 1
  for: 10m
  labels:
    alertgroup: dind_problem
    severity: warning
    handler: "true"
  annotations:
    message: "{{ $labels.pod_name }} is running without engine on re {{ $labels.codefresh_runtime_environment}} in namespace {{ $labels.namespace }} on node {{ $labels.node }}"
    summary: dind is running without engine
    handler: delete-pod-pvc {{ $labels.namespace }} {{ $labels.pod_name }}

- alert: dindPvcWithoutDind
  expr: dind_pvc_status == 1 unless on (dind_pod_name, dind_pod_namespace) dind_pod_status
  for: 1h
  labels:
    alertgroup: dind_problem
    severity: warning
    handler: "true"
  annotations:
    message: "PVC {{ $labels.pvc_name }} is bound without running dind on re {{ $labels.codefresh_runtime_environment}} in namespace {{ $labels.pvc_namespace }}"
    summary: dind is running without engine
    handler: delete-kubeobj {{ $labels.pvc_namespace }} pvc/{{ $labels.pvc_name }}

- alert: engineRunTooLong
  expr: dind_pod_status{dind_pod_name=~"engine.*"} == 1
  for: 180m
  labels:
    alertgroup: dind_problem
    severity: info
    handler: "true"
  annotations:
    message: "{{ $labels.dind_pod_name }} has run more than 3h on runtimeEnvironment {{ $labels.codefresh_runtime_environment}} in namespace {{ $labels.dind_pod_namespace }} on instance {{ $labels.instance }}\nWorkflow URL: {{ $labels.workflow_url }}?noAccount=true\nAccount: {{ $labels.io_codefresh_accountName }}"
    summary: engine run more than 3h
    handler: delete-kubeobj {{ $labels.dind_pod_namespace }} pod/{{ $labels.dind_pod_name }}
- alert: dindPvcIsBoundTooLong
  expr: dind_pvc_status == 1
  for: 183m
  labels:
    alertgroup: dind_problem
    severity: warning
    handler: "true"
  annotations:
    message: "dind pvc is bound too long {{ $labels.pvc_name }} in namespace={{ $labels.pvc_namespace }} , storageClass={{ $labels.storage_class }} , Runtime Env = {{ $labels.runtime_env }}\nWorkflow URL: {{ $labels.workflow_url }}?noAccount=true\nAccount: {{ $labels.io_codefresh_accountName }}"
    summary: dind pvc is bound too long
    handler: delete-kubeobj {{ $labels.pvc_namespace }} pvc/{{ $labels.pvc_name }}
- alert: dindPvcPending
  expr: dind_pvc_status != 1
  for: 1m
  labels:
    alertgroup: dind_problem
    severity: warning
  annotations:
    message: "Cannot bound dind pvc {{ $labels.dind_pod_name }} in namespace={{ $labels.dind_pod_namespace }} , storageClass={{ $labels.storage_class }},  Runtime Env = {{ $labels.runtime_env }}\nWorkflow URL: {{ $labels.workflow_url }}?noAccount=true\nAccount: {{ $labels.io_codefresh_accountName }}"
    summary: 'dind pvc: cannot bound'

- alert: TooManyCephPVCPending
  expr: count(dind_pvc_status{storage_class =~ ".*rbd.*"} !=1 !=2) > 5
  for: 3m
  labels:
    alertgroup: downtime
    severity: critical
    handler: "true"
  annotations:
    message: Too Many dind Ceph PVC are pending
    summary: Too Many dind Ceph PVC are pending
    handler: fix-dind-volume-provisioner

- alert: TooManyEbsPVCPending
  expr: count(dind_pvc_status{storage_class =~ ".*ebs.*"} !=1 !=2) > 8
  for: 5m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: Too Many dind EBS PVC are pending
    summary: Too Many dind EBS PVC are pending

- alert: dindPodPending
  expr: dind_pod_status != 1
  for: 2m
  labels:
    alertgroup: dind_problem
    severity: warning
  annotations:
    message: "Dind pod status = {{ $value }}: {{ $labels.dind_pod_name }} in namespace={{ $labels.dind_pod_namespace }} . 0-Pending, 1-Running, 2-Succeded, 3-Failed\nWorkflow URL: {{ $labels.workflow_url }}?noAccount=true\nAccount: {{ $labels.io_codefresh_accountName }}"
    summary: dind pod pending or failed

- alert: TooManyDindPodFailures
  expr: count(dind_pod_status !=1 !=2) > 10
  for: 5m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: Too Many dind POD Failure
    summary: Too Many dind POD Failures

- alert: DindVolumeProvisionerCpuWarning
  expr: (rate(container_cpu_user_seconds_total{pod_name=~"dind-volume-provisioner.*"}[5m])) / on(node) group_left() machine_cpu_cores > 0.3
  for: 10m
  labels:
    alertgroup: dind_problem
    severity: warning
  annotations:
    message: 'pod {{ $labels.pod_name }} cpu usage warning on node {{ $labels.instance }}'
    summary: Dind Volume Provisioner CPU usage warning

- alert: DindVolumeProvisionerMemoryWarning
  expr: container_memory_usage_bytes{job="kubelet", container_name = "dind-volume-provisioner"} > 2000000000
  for: 10m
  labels:
    alertgroup: dind_problem
    severity: warning
  annotations:
    message: 'pod {{ $labels.pod_name }} memory usage warning on node {{ $labels.instance }}'
    summary: Dind Volume Provisioner Memory usage warning
